%!PS-Adobe-2.0
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Tue Nov 30 22:57:50 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title ()
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (tom)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Nov 30 22:57:50 2010)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 120 scalefont setfont
/Times-Roman findfont 120 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
612 240 M
6407 0 V
stroke
LTb
612 240 M
63 0 V
6344 0 R
-63 0 V
540 240 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
612 822 M
6407 0 V
stroke
LTb
612 822 M
63 0 V
6344 0 R
-63 0 V
540 822 M
( 1000) Rshow
1.000 UL
LTb
1.000 UL
LTa
612 1404 M
6407 0 V
stroke
LTb
612 1404 M
63 0 V
6344 0 R
-63 0 V
-6416 0 R
( 2000) Rshow
1.000 UL
LTb
1.000 UL
LTa
612 1986 M
6407 0 V
stroke
LTb
612 1986 M
63 0 V
6344 0 R
-63 0 V
-6416 0 R
( 3000) Rshow
1.000 UL
LTb
1.000 UL
LTa
612 2568 M
6407 0 V
stroke
LTb
612 2568 M
63 0 V
6344 0 R
-63 0 V
-6416 0 R
( 4000) Rshow
1.000 UL
LTb
1.000 UL
LTa
612 3149 M
6407 0 V
stroke
LTb
612 3149 M
63 0 V
6344 0 R
-63 0 V
-6416 0 R
( 5000) Rshow
1.000 UL
LTb
1.000 UL
LTa
612 3731 M
6407 0 V
stroke
LTb
612 3731 M
63 0 V
6344 0 R
-63 0 V
-6416 0 R
( 6000) Rshow
1.000 UL
LTb
1.000 UL
LTa
612 4313 M
6407 0 V
stroke
LTb
612 4313 M
63 0 V
6344 0 R
-63 0 V
-6416 0 R
( 7000) Rshow
1.000 UL
LTb
1.000 UL
LTa
612 4895 M
6407 0 V
stroke
LTb
612 4895 M
63 0 V
6344 0 R
-63 0 V
-6416 0 R
( 8000) Rshow
1.000 UL
LTb
1.000 UL
LTa
612 240 M
0 4655 V
stroke
LTb
612 240 M
0 63 V
0 4592 R
0 -63 V
612 120 M
( 0) Cshow
1.000 UL
LTb
1.000 UL
LTa
1527 240 M
0 4655 V
stroke
LTb
1527 240 M
0 63 V
0 4592 R
0 -63 V
0 -4712 R
( 10000) Cshow
1.000 UL
LTb
1.000 UL
LTa
2443 240 M
0 4655 V
stroke
LTb
2443 240 M
0 63 V
0 4592 R
0 -63 V
0 -4712 R
( 20000) Cshow
1.000 UL
LTb
1.000 UL
LTa
3358 240 M
0 4655 V
stroke
LTb
3358 240 M
0 63 V
0 4592 R
0 -63 V
0 -4712 R
( 30000) Cshow
1.000 UL
LTb
1.000 UL
LTa
4273 240 M
0 4655 V
stroke
LTb
4273 240 M
0 63 V
0 4592 R
0 -63 V
0 -4712 R
( 40000) Cshow
1.000 UL
LTb
1.000 UL
LTa
5188 240 M
0 4655 V
stroke
LTb
5188 240 M
0 63 V
0 4592 R
0 -63 V
0 -4712 R
( 50000) Cshow
1.000 UL
LTb
1.000 UL
LTa
6104 240 M
0 4472 V
0 120 R
0 63 V
stroke
LTb
6104 240 M
0 63 V
0 4592 R
0 -63 V
0 -4712 R
( 60000) Cshow
1.000 UL
LTb
1.000 UL
LTa
7019 240 M
0 4655 V
stroke
LTb
7019 240 M
0 63 V
0 4592 R
0 -63 V
0 -4712 R
( 70000) Cshow
1.000 UL
LTb
1.000 UL
LTb
612 4895 N
612 240 L
6407 0 V
0 4655 V
-6407 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Times-Roman findfont 120 scalefont setfont
LCb setrgbcolor
6452 4772 M
("parsedData.txt") Rshow
LT0
6524 4772 M
351 0 V
612 240 M
1 1 V
2 0 V
3 0 V
3 0 V
4 0 V
5 0 V
5 0 V
7 0 V
7 1 V
7 0 V
9 0 V
9 3 V
10 0 V
10 -1 V
12 4 V
12 0 V
13 -2 V
13 7 V
14 -4 V
15 14 V
16 -10 V
17 2 V
17 14 V
18 -9 V
18 14 V
20 -6 V
20 -13 V
21 33 V
22 -16 V
22 28 V
23 -22 V
24 -19 V
24 45 V
25 -38 V
26 48 V
27 -29 V
28 42 V
28 14 V
29 27 V
29 -4 V
31 30 V
31 -49 V
32 -5 V
32 39 V
34 -8 V
34 36 V
35 50 V
35 -52 V
36 -71 V
37 125 V
38 -84 V
38 117 V
40 152 V
39 -374 V
41 237 V
42 -11 V
42 251 V
42 130 V
44 -32 V
44 99 V
45 -40 V
46 -64 V
47 -106 V
47 223 V
48 -125 V
48 7 V
50 298 V
50 -225 V
51 -210 V
52 332 V
52 -265 V
53 -118 V
54 347 V
54 262 V
56 -130 V
56 -226 V
56 -105 V
58 452 V
58 321 V
59 -75 V
60 134 V
60 -158 V
61 106 V
62 -224 V
63 -588 V
63 1302 V
64 -779 V
65 611 V
66 -865 V
66 1202 V
67 -672 V
68 437 V
68 -536 V
69 -185 V
70 224 V
71 766 V
71 -1187 V
72 514 V
73 1019 V
74 -209 V
74 -1172 V
75 1417 V
stroke 4496 2654 M
76 86 V
76 -1507 V
78 72 V
78 382 V
78 862 V
80 571 V
80 -410 V
81 926 V
82 -559 V
82 -1416 V
83 149 V
84 132 V
84 285 V
86 -158 V
86 -6 V
87 2533 V
87 -679 V
88 -2111 V
89 1578 V
90 -214 V
90 -215 V
92 -652 V
91 35 V
93 -363 V
93 1010 V
612 240 Pls
613 241 Pls
615 241 Pls
618 241 Pls
621 241 Pls
625 241 Pls
630 241 Pls
635 241 Pls
642 241 Pls
649 242 Pls
656 242 Pls
665 242 Pls
674 245 Pls
684 245 Pls
694 244 Pls
706 248 Pls
718 248 Pls
731 246 Pls
744 253 Pls
758 249 Pls
773 263 Pls
789 253 Pls
806 255 Pls
823 269 Pls
841 260 Pls
859 274 Pls
879 268 Pls
899 255 Pls
920 288 Pls
942 272 Pls
964 300 Pls
987 278 Pls
1011 259 Pls
1035 304 Pls
1060 266 Pls
1086 314 Pls
1113 285 Pls
1141 327 Pls
1169 341 Pls
1198 368 Pls
1227 364 Pls
1258 394 Pls
1289 345 Pls
1321 340 Pls
1353 379 Pls
1387 371 Pls
1421 407 Pls
1456 457 Pls
1491 405 Pls
1527 334 Pls
1564 459 Pls
1602 375 Pls
1640 492 Pls
1680 644 Pls
1719 270 Pls
1760 507 Pls
1802 496 Pls
1844 747 Pls
1886 877 Pls
1930 845 Pls
1974 944 Pls
2019 904 Pls
2065 840 Pls
2112 734 Pls
2159 957 Pls
2207 832 Pls
2255 839 Pls
2305 1137 Pls
2355 912 Pls
2406 702 Pls
2458 1034 Pls
2510 769 Pls
2563 651 Pls
2617 998 Pls
2671 1260 Pls
2727 1130 Pls
2783 904 Pls
2839 799 Pls
2897 1251 Pls
2955 1572 Pls
3014 1497 Pls
3074 1631 Pls
3134 1473 Pls
3195 1579 Pls
3257 1355 Pls
3320 767 Pls
3383 2069 Pls
3447 1290 Pls
3512 1901 Pls
3578 1036 Pls
3644 2238 Pls
3711 1566 Pls
3779 2003 Pls
3847 1467 Pls
3916 1282 Pls
3986 1506 Pls
4057 2272 Pls
4128 1085 Pls
4200 1599 Pls
4273 2618 Pls
4347 2409 Pls
4421 1237 Pls
4496 2654 Pls
4572 2740 Pls
4648 1233 Pls
4726 1305 Pls
4804 1687 Pls
4882 2549 Pls
4962 3120 Pls
5042 2710 Pls
5123 3636 Pls
5205 3077 Pls
5287 1661 Pls
5370 1810 Pls
5454 1942 Pls
5538 2227 Pls
5624 2069 Pls
5710 2063 Pls
5797 4596 Pls
5884 3917 Pls
5972 1806 Pls
6061 3384 Pls
6151 3170 Pls
6241 2955 Pls
6333 2303 Pls
6424 2338 Pls
6517 1975 Pls
6610 2985 Pls
6699 4772 Pls
% End plot #1
1.000 UL
LTb
612 4895 N
612 240 L
6407 0 V
0 4655 V
-6407 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
